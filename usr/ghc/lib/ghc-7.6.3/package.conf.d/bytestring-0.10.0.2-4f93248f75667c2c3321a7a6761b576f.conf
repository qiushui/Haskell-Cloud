name: bytestring
version: 0.10.0.2
id: bytestring-0.10.0.2-4f93248f75667c2c3321a7a6761b576f
license: BSD3
copyright: Copyright (c) Don Stewart          2005-2009,
           (c) Duncan Coutts        2006-2012,
           (c) David Roundy         2003-2005,
           (c) Jasper Van der Jeugt 2010,
           (c) Simon Meier          2010-2011.
maintainer: Don Stewart <dons00@gmail.com>,
            Duncan Coutts <duncan@community.haskell.org>
stability:
homepage:
package-url:
synopsis: Fast, compact, strict and lazy byte strings with a list interface
description: An efficient compact, immutable byte string type (both strict and lazy)
             suitable for binary or 8-bit character data.
             .
             The 'ByteString' type represents sequences of bytes or 8-bit characters.
             It is suitable for high performance use, both in terms of large data
             quantities, or high speed requirements. The 'ByteStrin'g functions follow
             the same style as Haskell\'s ordinary lists, so it is easy to convert code
             from using 'String' to 'ByteString'.
             .
             Two 'ByteString' variants are provided:
             .
             * Strict 'ByteString's keep the string as a single large array. This
             makes them convenient for passing data between C and Haskell.
             .
             * Lazy 'ByteString's use a lazy list of strict chunks which makes it
             suitable for I\/O streaming tasks.
             .
             The @Char8@ modules provide a character-based view of the same
             underlying 'ByteString' types. This makes it convenient to handle mixed
             binary and 8-bit character content (which is common in many file formats
             and network protocols).
             .
             The 'Builder' module provides an efficient way to build up 'ByteString's
             in an ad-hoc way by repeated concatenation. This is ideal for fast
             serialisation or pretty printing.
             .
             'ByteString's are not designed for Unicode. For Unicode strings you should
             use the 'Text' type from the @text@ package.
             .
             These modules are intended to be imported qualified, to avoid name clashes
             with "Prelude" functions, e.g.
             .
             > import qualified Data.ByteString as BS
category: Data
author: Don Stewart,
        Duncan Coutts
exposed: True
exposed-modules: Data.ByteString Data.ByteString.Char8
                 Data.ByteString.Unsafe Data.ByteString.Internal
                 Data.ByteString.Lazy Data.ByteString.Lazy.Char8
                 Data.ByteString.Lazy.Internal Data.ByteString.Lazy.Builder
                 Data.ByteString.Lazy.Builder.Extras
                 Data.ByteString.Lazy.Builder.ASCII
hidden-modules: Data.ByteString.Lazy.Builder.Internal
                Data.ByteString.Lazy.Builder.BasicEncoding
                Data.ByteString.Lazy.Builder.BasicEncoding.Extras
                Data.ByteString.Lazy.Builder.BasicEncoding.Internal
                Data.ByteString.Lazy.Builder.BasicEncoding.Binary
                Data.ByteString.Lazy.Builder.BasicEncoding.ASCII
                Data.ByteString.Lazy.Builder.BasicEncoding.Internal.Floating
                Data.ByteString.Lazy.Builder.BasicEncoding.Internal.UncheckedShifts
                Data.ByteString.Lazy.Builder.BasicEncoding.Internal.Base16
trusted: False
import-dirs: $topdir/bytestring-0.10.0.2
library-dirs: $topdir/bytestring-0.10.0.2
hs-libraries: HSbytestring-0.10.0.2
extra-libraries:
extra-ghci-libraries:
include-dirs: $topdir/bytestring-0.10.0.2/include
includes: fpstring.h
depends: base-4.6.0.1-8aa5d403c45ea59dcd2c39f123e27d57
         deepseq-1.3.0.1-5cc4cd89bdc2e8f6db1833d95ec36926
         ghc-prim-0.3.0.0-d5221a8c8a269b66ab9a07bdc23317dd
hugs-options:
cc-options:
ld-options:
framework-dirs:
frameworks:
haddock-interfaces:
haddock-html:
