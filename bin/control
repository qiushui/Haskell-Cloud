#!/bin/bash -eu

source $OPENSHIFT_CARTRIDGE_SDK_BASH

function pid {
  lsof -ti @$OPENSHIFT_HASKELL_IP:$OPENSHIFT_HASKELL_PORT -sTCP:listen
}

function start {
  if pid &>/dev/null; then
    warning "The server is already running."
  else
    server $OPENSHIFT_HASKELL_IP $OPENSHIFT_HASKELL_PORT &
  fi
}

function stop {
  if pid=$(pid); then
    kill $pid
    wait_for_stop $pid
    if pid; then error "The server did not respond to the stop signal." 1; fi
  else
    warning "The server is not running, nothing to stop."
  fi
}

case "$1" in
  start)   start
           ;;
  stop)    stop
           ;;
  restart) stop
           start
           ;;
  status)  if ! pid &>/dev/null; then
             exit 1;
           fi
           ;;
  tidy)    echo "deleting logs ..."
           rm -rf $OPENSHIFT_HASKELL_LOG_DIR
           echo "deleting hackage cache ..."
           rm -rf ${OPENSHIFT_HASKELL_DIR}cabal/packages/hackage.haskell.org/*/
           rm -rf ${OPENSHIFT_HASKELL_DIR}cabal/packages/hackage.haskell.org/00-index.tar.gz
           rm -rf ${OPENSHIFT_HASKELL_DIR}cabal/packages/hackage.haskell.org/build-reports.log
           echo "emptying working directory ..."
           rm -rf ${OPENSHIFT_REPO_DIR}*
           ;;
  build)   if marker_present force_clean_build; then
             echo "marker: force_clean_build ..."
             rm -rf ${OPENSHIFT_HASKELL_DIR}cabal/bin
             rm -rf ${OPENSHIFT_HASKELL_DIR}cabal/lib
             rm -rf ${OPENSHIFT_HASKELL_DIR}cabal/share
             rm -f ${OPENSHIFT_HASKELL_DIR}cabal/world
             rm -rf $CABAL_PACKAGES
             ghc-pkg init $CABAL_PACKAGES
           fi
           if marker_present cabal_update; then
             echo "marker: cabal_update ..."
             cabal update
           fi
           cd $OPENSHIFT_REPO_DIR
           if marker_present run_tests; then
             cabal install --enable-tests --only-dependencies
             cabal configure --enable-tests
             cabal build
             echo "marker: run_tests ..."
             log=$OPENSHIFT_HASKELL_LOG_DIR/tests.log
             echo >>$log
             date >>$log
             echo >>$log
             cabal test --log=$log
           fi
           cabal install
           ;;
esac
